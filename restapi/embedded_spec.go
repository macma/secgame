// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Application used for clpsec",
    "title": "clpsec app",
    "version": "1.0.0"
  },
  "host": "clpsec",
  "paths": {
    "/api/v1/blue": {
      "post": {
        "operationId": "bluePressed",
        "responses": {
          "200": {
            "description": "blue pressed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orange": {
      "post": {
        "operationId": "orangePressed",
        "responses": {
          "200": {
            "description": "orange pressed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/query": {
      "post": {
        "operationId": "query",
        "parameters": [
          {
            "description": "graphql fields",
            "name": "gqlFields",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gql"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "query",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "gql": {
      "type": "object",
      "required": [
        "gqlField"
      ],
      "properties": {
        "gqlField": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Application used for clpsec",
    "title": "clpsec app",
    "version": "1.0.0"
  },
  "host": "clpsec",
  "paths": {
    "/api/v1/blue": {
      "post": {
        "operationId": "bluePressed",
        "responses": {
          "200": {
            "description": "blue pressed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orange": {
      "post": {
        "operationId": "orangePressed",
        "responses": {
          "200": {
            "description": "orange pressed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/query": {
      "post": {
        "operationId": "query",
        "parameters": [
          {
            "description": "graphql fields",
            "name": "gqlFields",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gql"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "query",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "gql": {
      "type": "object",
      "required": [
        "gqlField"
      ],
      "properties": {
        "gqlField": {
          "type": "string"
        }
      }
    }
  }
}`))
}
